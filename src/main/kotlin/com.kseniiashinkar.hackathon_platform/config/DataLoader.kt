package com.kseniiashinkar.hackathon_platform.config

import com.kseniiashinkar.hackathon_platform.entity.*
import com.kseniiashinkar.hackathon_platform.repository.*
import org.springframework.boot.CommandLineRunner
import org.springframework.stereotype.Component
import java.time.LocalDateTime

@Component
class DataLoader(
    private val eventRepository: EventRepository,
    private val userRepository: UserRepository,
    private val teamRepository: TeamRepository,
    private val teamMemberRepository: TeamMemberRepository,
    private val projectRepository: ProjectRepository
) : CommandLineRunner {

    override fun run(args: Array<String>) {
        // –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        // projectRepository.deleteAll()
        // teamMemberRepository.deleteAll()
        // teamRepository.deleteAll()
        // userRepository.deleteAll()
        // eventRepository.deleteAll()

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        if (eventRepository.count() == 0L) {
            createTestData()
        }
    }

    private fun createTestData() {
        println("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

        // 1. –°–æ–∑–¥–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        val hackathon = Event(
            name = "–•–∞–∫–∞—Ç–æ–Ω –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
            description = "–ü–µ—Ä–≤—ã–π —Ö–∞–∫–∞—Ç–æ–Ω –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏",
            startDate = LocalDateTime.now().plusDays(7),
            endDate = LocalDateTime.now().plusDays(8),
            location = "–û–Ω–ª–∞–π–Ω",
            maxParticipants = 50,
            participantCount = 0  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        )
        val savedHackathon = eventRepository.save(hackathon)

        val workshop = Event(
            name = "–í–æ—Ä–∫—à–æ–ø –ø–æ Spring Boot",
            description = "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –≤–æ—Ä–∫—à–æ–ø –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é REST API",
            startDate = LocalDateTime.now().plusDays(14),
            endDate = LocalDateTime.now().plusDays(15),
            location = "IT-–ø–∞—Ä–∫",
            maxParticipants = 30,
            participantCount = 0  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        )
        val savedWorkshop = eventRepository.save(workshop)

        // 2. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        val admin = User(
            email = "admin@hackathon.com",
            password = "admin123",
            firstName = "–ê–¥–º–∏–Ω",
            lastName = "–°–∏—Å—Ç–µ–º—ã",
            role = UserRole.ADMIN
        )
        val savedAdmin = userRepository.save(admin)

        val organizer = User(
            email = "organizer@hackathon.com",
            password = "org123",
            firstName = "–ò–≤–∞–Ω",
            lastName = "–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤",
            phoneNumber = "+79991234567",
            skills = "Project Management, Event Planning",
            role = UserRole.ORGANIZER
        )
        val savedOrganizer = userRepository.save(organizer)

        val participant1 = User(
            email = "alex@mail.com",
            password = "pass123",
            firstName = "–ê–ª–µ–∫—Å–µ–π",
            lastName = "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤",
            phoneNumber = "+79997654321",
            skills = "Java, Spring Boot, Kotlin",
            role = UserRole.PARTICIPANT
        )
        val savedParticipant1 = userRepository.save(participant1)

        val participant2 = User(
            email = "maria@mail.com",
            password = "pass123",
            firstName = "–ú–∞—Ä–∏—è",
            lastName = "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤–∞",
            phoneNumber = "+79998887766",
            skills = "Python, Django, React",
            role = UserRole.PARTICIPANT
        )
        val savedParticipant2 = userRepository.save(participant2)

        // 3. –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
        val team1 = Team(
            name = "–ö–æ–¥–µ—Ä—ã",
            description = "–ö–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
            maxSize = 4,
            event = savedHackathon,
            inviteCode = "TEAM123"
        )
        val savedTeam1 = teamRepository.save(team1)

        // 4. –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥—ã
        val teamMember1 = TeamMember(
            user = savedParticipant1,
            team = savedTeam1,
            role = TeamRole.LEADER
        )
        teamMemberRepository.save(teamMember1)

        val teamMember2 = TeamMember(
            user = savedParticipant2,
            team = savedTeam1,
            role = TeamRole.MEMBER
        )
        teamMemberRepository.save(teamMember2)

        // 5. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
        val project1 = Project(
            name = "Hackathon Platform",
            description = "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ö–∞–∫–∞—Ç–æ–Ω–æ–≤ –Ω–∞ Spring Boot",
            githubUrl = "https://github.com/example/hackathon-platform",
            demoUrl = "https://demo.example.com",
            team = savedTeam1
        )
        projectRepository.save(project1)

        println("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
        println("   - –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: ${eventRepository.count()}")
        println("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userRepository.count()}")
        println("   - –ö–æ–º–∞–Ω–¥: ${teamRepository.count()}")
        println("   - –ü—Ä–æ–µ–∫—Ç–æ–≤: ${projectRepository.count()}")
    }
}